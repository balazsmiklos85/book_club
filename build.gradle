plugins {
	id 'io.spring.dependency-management' version '1.1.2'
	id 'jacoco'
	id 'java'
	id 'org.liquibase.gradle' version '2.2.0'
	id 'org.sonarqube' version '4.4.1.3373'
	id 'org.springframework.boot' version '3.1.2'
}

group = 'hu.bmiklos'
version = '1.3.1'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'com.h2database:h2'
}

configurations {
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntimeOnly.extendsFrom testRuntime
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		csv.required = false
	}
}

sonar {
	properties {
		property 'sonar.projectKey', 'balazsmiklos85_book_club'
		property 'sonar.organization', 'balazsmiklos85'
		property 'sonar.host.url', 'https://sonarcloud.io'
		property 'sonar.token', System.env.SONARCLOUD_TOKEN
		property 'sonar.branch.name', System.env.GITHUB_HEAD_REF ?: (System.env.GITHUB_REF_NAME ?: 'local_build')
	}
}

sourceSets {
	integrationTest {
		compileClasspath += sourceSets.main.output + sourceSets.test.output
		runtimeClasspath += sourceSets.main.output + sourceSets.test.output
	}
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

task integrationTest(type: Test) {
	description = "Run integration tests"
	group = "verification"
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath

	useJUnitPlatform()

	testLogging {
		events "passed"
	}
}
