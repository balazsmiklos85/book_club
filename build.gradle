plugins {
	id 'io.spring.dependency-management' version '1.1.6'
	id 'jacoco'
	id 'java'
	id 'org.liquibase.gradle' version '2.2.0'
	id 'org.sonarqube' version '5.1.0.4882'
	id 'org.springframework.boot' version '3.3.3'
}

group = 'hu.bmiklos'
version = '1.4.2.0'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '3.3.3'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '3.3.3'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: '3.3.4'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '3.3.4'
	implementation group: 'org.liquibase', name: 'liquibase-core', version: '4.29.2'
	implementation group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity6', version: '3.1.2.RELEASE'
	runtimeOnly group: 'com.h2database', name: 'h2', version: '2.3.232'
	runtimeOnly group: 'org.postgresql', name: 'postgresql', version: '42.6.0'
	testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '3.1.2'
	testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '6.3.3'
	testImplementation group: 'com.h2database', name: 'h2', version: '2.3.232'
}

configurations {
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntimeOnly.extendsFrom testRuntime
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		csv.required = false
	}
}

sonar {
	properties {
		property 'sonar.projectKey', 'balazsmiklos85_book_club'
		property 'sonar.organization', 'balazsmiklos85'
		property 'sonar.host.url', 'https://sonarcloud.io'
		property 'sonar.token', System.env.SONARCLOUD_TOKEN
		property 'sonar.branch.name', System.env.GITHUB_HEAD_REF ?: (System.env.GITHUB_REF_NAME ?: 'local_build')
	}
}

sourceSets {
	integrationTest {
		compileClasspath += sourceSets.main.output + sourceSets.test.output
		runtimeClasspath += sourceSets.main.output + sourceSets.test.output
	}
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

task devRun {
	bootRun.configure {
		systemProperty "spring.profiles.active", 'dev'
		environment 'PORT', 8080
	}
	finalizedBy 'bootRun'
}


task integrationTest(type: Test) {
	description = "Run integration tests"
	group = "verification"
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
	environment 'PORT', 8080

	useJUnitPlatform()

	testLogging {
		events "passed"
	}
}
